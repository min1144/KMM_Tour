[versions]
# configurations
navigation-compose="2.7.5"
toolchain="0.4.0"
jvm-target = "17"
namespace = "com.test.examplekmp"
android-minSdk = "26"
android-targetSdk = "34"
android-compileSdk = "34"
ios-deployment-target = "14.1"
version-name = "0.0.1"
version-code = "1"

# versions
gradle = "8.1.2"
kotlin = "1.9.10"
coroutine = "1.7.3"
junit = "4.13.2"
espresso = "3.4.0"
kotlinCompilerExtensionVersion = "1.5.3"
desugar-jdk-libs = "2.0.3"
# versions androidx
androidx-core = "1.12.0"
androidx-activity = "1.7.2"
androidx-appcompat = "1.6.1"
# versions compose
activityx-compose = "1.7.2"
compose-multiplatform = "1.5.10"
# version kotlinx
kotlinx-serialization-json = "1.5.1"
kotlinx-coroutines-core = "1.7.3"
kotlinx-collections-immutable = "0.3.5"
kotlinx-datetime = "0.4.1"
kotlinx-atomicfu = "0.22.0"
# version javax
javax-inject = "1"
# ktor
ktor = "2.3.4"
# kotlin-inject
koin="3.4.3"
koin-compose="1.0.4"
# essenty
essenty="1.2.0"
# decompose
decompose="2.1.2"
decompose-extensions="2.1.2-compose-experimental"
# moko
moko="0.16.1"
# moko-resource
moko-resource="0.23.0"
# compose-imageloader
compose-imageloader = "1.6.8"
# napier
napier = "2.6.1"
compose-navigation = "2.5.3"
accompanist = "0.32.0"
#naverMap
naver-map = "3.17.0"
#navigation
precompose-version = "1.5.8"

############################
#cocoaPods
pod-NaverMap = "NMapsMap"
############################


[plugins]
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
native-cocoapod = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "gradle" }
android-application = { id = "com.android.application", version.ref = "gradle" }
toolchain = { id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "toolchain" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resource" }
#kotlinx
kotlinx-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }

[libraries]
# android
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityx-compose" }
# android compose
android-compose-foundation = { group = "org.jetbrains.compose.foundation", name = "foundation", version.ref="compose-multiplatform" }
android-compose-ui = { group = "org.jetbrains.compose.ui", name = "ui", version.ref="compose-multiplatform" }
android-compose-ui-tooling = { group = "org.jetbrains.compose.ui", name = "ui-tooling", version.ref="compose-multiplatform" }
android-compose-ui-tooling-preview = { group = "org.jetbrains.compose.ui", name = "ui-tooling-preview", version.ref="compose-multiplatform" }

# ktor
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
ktor-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-http = { group = "io.ktor", name = "ktor-http", version.ref = "ktor" }
ktor-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor-darwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-content-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { group = "io.ktor", name = "ktor-client-mock", version.ref = "ktor" }
ktor-client-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
ktor-client-resources = { group = "io.ktor", name = "ktor-client-resources", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-logging-jvm = { group = "io.ktor", name = "ktor-client-logging-jvm", version.ref = "ktor" }
# kotlinx
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
# kotlinx
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-core" }
kotlinx-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-atomicfu = { group = "org.jetbrains.kotlinx", name = "atomicfu", version.ref = "kotlinx-atomicfu"}
# javax
javax-inject = { group = "javax.inject", name = "javax.inject", version.ref = "javax.inject" }
# Koin
koin-core = {group = "io.insert-koin", name = "koin-core", version.ref = "koin"}
koin-android = {group = "io.insert-koin", name = "koin-android", version.ref = "koin"}
koin-compose = {group = "io.insert-koin", name = "koin-compose", version.ref = "koin-compose"}
# Essenty
essenty-parcelable = {group = "com.arkivanov.essenty", name = "parcelable", version.ref = "essenty"}
# Decompose
decompose = {group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose"}
decompose-extension = {group = "com.arkivanov.decompose", name = "extensions-compose-jetbrains", version.ref = "decompose-extensions"}
# moko
moko-core = {group = "dev.icerock.moko", name = "mvvm-core", version.ref = "moko"}
moko-flow = {group = "dev.icerock.moko", name = "mvvm-flow", version.ref = "moko"}
moko-compose = {group = "dev.icerock.moko", name = "mvvm-compose", version.ref = "moko"}
moko-flow-compose = {group = "dev.icerock.moko", name = "mvvm-flow-compose", version.ref = "moko"}
moko-resource = {group = "dev.icerock.moko", name = "resources", version.ref = "moko-resource"}
moko-resource-compose = {group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko-resource"}
# compose-imageloader
compose-imageloader = { group = "io.github.qdsfdhvh", name = "image-loader", version.ref = "compose-imageloader" }
compose-imageloader-moko = { group = "io.github.qdsfdhvh", name = "image-loader-extension-moko-resources", version.ref = "compose-imageloader" }
# napier
napier = { group = "io.github.aakira", name= "napier", version.ref = "napier" }
# NaverMap
naver-map = { group = "com.naver.maps", name = "map-sdk", version.ref = "naver-map" }

# test
junit = { module = "junit:junit", version.ref = "junit" }
espresso = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
androidx-navigation-runtime-ktx = { group = "androidx.navigation", name = "navigation-runtime-ktx", version = "2.7.5" }
androidx-ui-tooling-preview-android = { group = "androidx.compose.ui", name = "ui-tooling-preview-android", version = "1.5.4" }
core = { group = "androidx.core", name = "core", version = "1.12.0" }

[bundles]
ktor = [
    "ktor-core", "ktor-client-content-negotiation", "ktor-client-content-serialization", "ktor-serialization-kotlinx-json", "ktor-client-resources", "ktor-client-auth"
]

koin = ["koin-core", "koin-android"]

decompose = ["decompose", "decompose-extension"]

moko = ["moko-core", "moko-flow", "moko-compose", "moko-flow-compose"]

moko-resourse = ["moko-resource", "moko-resource-compose"]

compose-imageloader = ["compose-imageloader", "compose-imageloader-moko"]
